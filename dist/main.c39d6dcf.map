{"version":3,"sources":["src/viewport/viewport.ts","src/sprites/player.ts","src/sprites/coins.ts","src/canvas/canvas.ts","src/sprites/platforms.ts","src/controller/controller.ts","src/engine/score.ts","src/sounds/sounds.ts","src/sprites/spikes.ts","src/engine/engine.ts","main.ts"],"names":[],"mappings":"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","file":"main.c39d6dcf.map","sourceRoot":"..","sourcesContent":["const bg = document.getElementsByClassName(\"background\")[0];\n\nconst vh = bg.getBoundingClientRect().height / 100;\nconst vw = bg.getBoundingClientRect().width / 100;\n\nexport { vh, vw };\n","const context = document.querySelector(\"canvas\").getContext(\"2d\");\n\nlet player = {\n  height: 32,\n  width: 32,\n  color: \"#ff0000\",\n  type: \"rect\",\n  tag: \"player\",\n  inAir: false,\n  firstJump: false,\n  secondJump: false,\n  x: 0, //start location\n  xVelocity: 0,\n  y: context.canvas.height - 16,\n  yVelocity: 0,\n  bounds: {\n    centerX: 0\n  }\n};\n\nexport { player };\n","let coins = [\n  {\n    height: 21,\n    width: 32,\n    image: document.getElementById(\"coin\"),\n    frame: 0,\n    counter: 0,\n    maxCounter: 3,\n    maxFrames: 8,\n    type: \"image\",\n    tag: \"coin\",\n    rank: 0,\n    x: 0,\n    xVelocity: 0,\n    y: 0,\n    yVelocity: 0,\n    bounds: {\n      centerX: 0\n    }\n  },\n  {\n    height: 21,\n    width: 32,\n    image: document.getElementById(\"coin\"),\n    frame: 0,\n    counter: 0,\n    maxCounter: 3,\n    maxFrames: 8,\n    type: \"image\",\n    tag: \"coin\",\n    rank: 1,\n    x: 200,\n    xVelocity: 0,\n    y: 0,\n    yVelocity: 0,\n    bounds: {\n      centerX: 0\n    }\n  },\n  {\n    height: 21,\n    width: 32,\n    image: document.getElementById(\"coin\"),\n    frame: 0,\n    counter: 0,\n    maxCounter: 3,\n    maxFrames: 8,\n    type: \"image\",\n    tag: \"coin\",\n    rank: 2,\n    x: 400,\n    xVelocity: 0,\n    y: 0,\n    yVelocity: 0,\n    bounds: {\n      centerX: 0\n    }\n  }\n];\n\nexport { coins };\n","import { vh, vw } from \"../viewport/viewport\";\n\nconst context = document.querySelector(\"canvas\").getContext(\"2d\");\n\ncontext.canvas.height = 80 * vh;\ncontext.canvas.width = 90 * vw;\n\nconst background = {\n  height: context.canvas.height,\n  width: context.canvas.width,\n  color: \"#202020\",\n  type: \"rect\",\n  x: 0,\n  y: 0,\n  centerX: context.canvas.width / 2,\n  centerY: context.canvas.height / 2\n};\n\nconst ground = {\n  thickness: 4,\n  color: \"#55ff55\",\n  type: \"line\",\n  xStart: 0,\n  yStart: context.canvas.height - 16,\n  xEnd: context.canvas.width,\n  yEnd: context.canvas.height - 16\n};\n\nexport { background, ground };\n","const context = document.querySelector(\"canvas\").getContext(\"2d\");\n\nlet platforms = [\n  {\n    height: 32,\n    width: 128,\n    color: \"#55ff55\",\n    type: \"rect\",\n    tag: \"platform\",\n    x: context.canvas.width * 0.3333,\n    y: context.canvas.height / 2,\n    xVelocity: 0,\n    yVelocity: 0,\n    bounds: { bottom: 0, left: 0, top: 0, right: 0 }\n  },\n  {\n    height: 32,\n    width: 128,\n    color: \"#55ff55\",\n    type: \"rect\",\n    tag: \"platform\",\n    x: context.canvas.width * 0.6666,\n    y: context.canvas.height / 2 - 48,\n    xVelocity: 0,\n    yVelocity: 0,\n    bounds: { bottom: 0, left: 0, top: 0, right: 0 }\n  },\n  {\n    height: 32,\n    width: 128,\n    color: \"#55ff55\",\n    type: \"rect\",\n    tag: \"platform\",\n    x: 0,\n    y: context.canvas.height / 2 - 48,\n    xVelocity: 0,\n    yVelocity: 0,\n    bounds: {\n      bottom: 0,\n      left: 0,\n      top: 0,\n      right: 0\n    }\n  }\n];\n\nconst randomColor = () => {\n  let r = Math.floor(Math.random() * 200 + 1);\n  let g = Math.floor(Math.random() * 200 + 1);\n  let b = Math.floor(Math.random() * 200 + 1);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport { platforms, randomColor };\n","const context = document.querySelector(\"canvas\").getContext(\"2d\");\n\nlet controller = {\n  left: false,\n  right: false,\n  up: false,\n\n  keyListener: function(event) {\n    let isKeyPressed = event.type === \"keydown\" ? true : false;\n\n    switch (event.key) {\n      case \"a\":\n      case \"A\":\n      case \"ArrowLeft\":\n        controller.left = isKeyPressed;\n        break;\n      case \"w\":\n      case \"W\":\n      case \"ArrowUp\":\n      case \" \":\n        controller.up = isKeyPressed;\n        break;\n      case \"d\":\n      case \"D\":\n      case \"ArrowRight\":\n        controller.right = isKeyPressed;\n        break;\n    }\n  }\n};\n\nexport { controller };\n","import { vh, vw } from \"../viewport/viewport\";\n\nlet score = {\n  numValue: 0,\n  textValue: \"000000\",\n  type: \"text\",\n  tag: \"score\",\n  text: `Score: 000000`,\n  font: `${8 * vh}px Indie Flower, cursive`,\n  color: \"#55ff55\",\n  x: 2 * vw, //start location\n  y: 10 * vh\n};\n\nconst updateScore = collectible => {\n  if (collectible.tag === \"coin\") {\n    collectible.x = -50;\n    score.numValue = score.numValue + 10;\n    score.textValue = String(score.numValue);\n    for (let i = score.textValue.length; i < 6; i++) {\n      score.textValue = \"0\" + score.textValue;\n    }\n    score.text = `Score: ${score.textValue}`;\n  }\n};\n\nexport { score, updateScore };\n","function muteMe(elem) {\n  if (!elem.muted) {\n    elem.muted = true;\n    elem.pause();\n  } else {\n    elem.muted = false;\n  }\n}\n\nfunction changeBtnHtml() {\n  const muteBtn = document.getElementById(\"muteBtn\");\n  if (muteBtn.innerHTML === \"Sound: OFF\") {\n    muteBtn.innerHTML = \"Sound: ON\";\n  } else {\n    muteBtn.innerHTML = \"Sound: OFF\";\n  }\n}\n\nfunction mutePage() {\n  document.querySelectorAll(\"video, audio\").forEach(elem => muteMe(elem));\n  changeBtnHtml();\n}\n\nexport { mutePage };\n","const context = document.querySelector(\"canvas\").getContext(\"2d\");\n\nlet spikes = [\n  {\n    height: 34,\n    width: 67,\n    image: document.getElementById(\"spikes\"),\n    frame: 0,\n    counter: 0,\n    maxCounter: 0,\n    maxFrames: 0,\n    type: \"image\",\n    tag: \"spikes\",\n    rank: 0,\n    x: context.canvas.width * 0.3333,\n    y: context.canvas.height - 52,\n    xVelocity: 0,\n    yVelocity: 0,\n    bounds: {\n      centerX: 0\n    }\n  }\n];\n\nexport { spikes };\n","import { vh, vw } from \"../viewport/viewport\";\nimport { player } from \"../sprites/player\";\nimport { coins } from \"../sprites/coins\";\nimport { background, ground } from \"../canvas/canvas\";\nimport { platforms, randomColor } from \"../sprites/platforms\";\nimport { controller } from \"../controller/controller\";\nimport { score, updateScore } from \"./score\";\nimport { mutePage } from \"../sounds/sounds\";\nimport { spikes } from \"../sprites/spikes\";\n\nlet environment;\n\nmutePage();\n\nconst music = document.getElementById(\"music\");\nconst coinAudio = [\n  document.getElementById(\"coinAudio1\"),\n  document.getElementById(\"coinAudio2\"),\n  document.getElementById(\"coinAudio3\")\n];\n\nconst settings = {\n  playerSpeed: 0.5,\n  jumpHeight: -10 * vh, //must be negative for up on y axis\n  secondJumpHeight: -7 * vh, //must be negative\n  maxJump: -40, //must be negative\n  maxSpeed: 20,\n  gravity: 0.3 * vh,\n  friction: 0.9\n};\n\nconst context = document.querySelector(\"canvas\").getContext(\"2d\");\n\ncontext.canvas.height = 80 * vh;\ncontext.canvas.width = 90 * vw;\n\nconst landingActions = () => {\n  player.inAir = false;\n  player.firstJump = false;\n  player.secondJump = false;\n  player.yVelocity = 0;\n};\n\nconst draw = sprite => {\n  //draw rectangle\n\n  if (sprite.type === \"rect\") {\n    context.beginPath();\n    context.fillStyle = sprite.color;\n    context.rect(sprite.x, sprite.y, sprite.width, sprite.height);\n    context.fill();\n  }\n\n  //draw lines\n\n  if (sprite.type === \"line\") {\n    context.beginPath();\n    context.strokeStyle = sprite.color;\n    context.lineWidth = sprite.thickness;\n    context.moveTo(sprite.xStart, sprite.yStart);\n    context.lineTo(sprite.xEnd, sprite.yEnd);\n    context.stroke();\n  }\n\n  // draw images\n\n  if (sprite.type === \"image\") {\n    let {\n      image,\n      width,\n      height,\n      frame,\n      maxFrames,\n      counter,\n      maxCounter,\n      x,\n      y\n    } = sprite;\n    context.drawImage(\n      image,\n      width * frame,\n      0,\n      width,\n      height,\n      x,\n      y,\n      width,\n      height\n    );\n    sprite.counter++;\n    if (counter >= maxCounter) {\n      sprite.frame++;\n      sprite.counter = 0;\n    }\n    if (frame > maxFrames - 1) {\n      sprite.frame = 0;\n    }\n  }\n\n  // draw text\n\n  if (sprite.type === \"text\") {\n    const { text, font, x, y } = sprite;\n    context.font = font;\n    context.fillStyle = sprite.color;\n    context.fillText(text, x, y);\n  }\n};\n\n//returns top bottom right and left of an object\n\nconst getBounds = unit => {\n  unit.bounds = {\n    centerX: unit.x + unit.width / 2,\n    caneterY: unit.y + unit.height / 2,\n    top: unit.y,\n    bottom: unit.y + unit.height,\n    right: unit.x + unit.width,\n    left: unit.x\n  };\n};\n\nconst reactToCollision = (p, plat) => {\n  const rightOffset = plat.bounds.right - p.bounds.left;\n  const leftOffset = p.bounds.right - plat.bounds.left;\n  const topOffset = p.bounds.bottom - plat.bounds.top;\n  const bottomOffset = plat.bounds.bottom - p.bounds.top;\n\n  if (plat.tag === \"enemy\") {\n    p.color = \"#fff\";\n  }\n\n  const largest = Math.min.apply(Math, [\n    rightOffset,\n    leftOffset,\n    topOffset,\n    bottomOffset\n  ]);\n\n  switch (largest) {\n    case rightOffset:\n      p.x = plat.bounds.right;\n      if (p.xVelocity > 0) {\n        p.xVelocity = 0;\n      }\n      break;\n    case leftOffset:\n      p.x = plat.bounds.left - p.width;\n      if (p.xVelocity < 0) {\n        p.xVelocity = 0;\n      }\n\n      break;\n    case topOffset:\n      p.y = plat.bounds.top - p.height;\n      if (p.yVelocity > 0) {\n        p.yVelocity = 0;\n        landingActions();\n      }\n\n      break;\n    case bottomOffset:\n      p.y = plat.bounds.bottom;\n      if (p.yVelocity < 0) {\n        p.yVelocity = 0;\n      }\n      break;\n  }\n};\n\nconst detectCollision = p => {\n  //loop through platforms and check each\n  getBounds(p);\n  environment.map(plat => {\n    if (p !== plat) {\n      getBounds(plat);\n      if (\n        p.bounds.top > plat.bounds.bottom ||\n        p.bounds.right < plat.bounds.left ||\n        p.bounds.bottom < plat.bounds.top ||\n        p.bounds.left > plat.bounds.right\n      ) {\n      } else if (plat.tag === \"platform\") {\n        reactToCollision(p, plat);\n      } else if (plat.tag === \"coin\") {\n        updateScore(plat);\n        coinAudio[plat.rank].volume = 0.4;\n        coinAudio[plat.rank].play();\n      }\n    }\n  });\n};\n\nconst movement = () => {\n  //this moves the platforms\n\n  environment.map(plat => {\n    plat.x += player.xVelocity;\n    if (plat.x < plat.width * -1) {\n      plat.x = context.canvas.width;\n      plat.y = Math.random() * context.canvas.height - 16 - plat.height;\n      if (plat.y < 0) {\n        plat.y = 0;\n      }\n      detectCollision(plat);\n\n      if (plat.tag === \"platform\") {\n        plat.width = (Math.random() * context.canvas.height) / 2;\n        plat.color = randomColor();\n      }\n      if (plat.width < 32 && plat.tag === \"platform\") {\n        plat.width = 32;\n      }\n    } else if (plat.x > context.canvas.width) {\n      plat.x = -32;\n      plat.y = Math.random() * context.canvas.height - 16 - plat.height;\n      if (plat.tag === \"platform\") {\n        plat.width = (Math.random() * context.canvas.height) / 2;\n        plat.color = randomColor();\n      }\n      if (plat.y < 0) {\n        plat.y = 0;\n      }\n      detectCollision(plat);\n      if (plat.width < 32 && plat.tag === \"platform\") {\n        plat.width = 32;\n      }\n    }\n  });\n};\n\nenvironment = platforms.map(x => x);\ncoins.map(coin => environment.push(coin));\n\nconst loop = function() {\n  const {\n    playerSpeed,\n    maxSpeed,\n    jumpHeight,\n    secondJumpHeight,\n    maxJump,\n    gravity,\n    friction\n  } = settings;\n\n  if (player.yVelocity <= maxJump) {\n    player.yVelocity = maxJump;\n  }\n\n  if (controller.up && player.firstJump === false && player.inAir === false) {\n    player.yVelocity = jumpHeight;\n    player.inAir = true;\n  }\n\n  if (!controller.up && player.firstJump === false) {\n    player.firstJump = true;\n  }\n\n  if (\n    controller.up &&\n    player.firstJump === true &&\n    player.secondJump === false\n  ) {\n    player.yVelocity = secondJumpHeight;\n    player.secondJump = true;\n  }\n\n  if (controller.left) {\n    if (player.xVelocity < 0) {\n      player.xVelocity *= friction;\n    }\n    player.xVelocity += playerSpeed;\n  }\n\n  if (controller.right) {\n    if (player.xVelocity > 0) {\n      player.xVelocity *= friction;\n    }\n    player.xVelocity -= playerSpeed;\n  }\n\n  //this moves the player\n\n  player.yVelocity += gravity;\n  player.y += player.yVelocity;\n  player.yVelocity *= friction;\n  if (\n    player.bounds.centerX > background.centerX ||\n    player.bounds.centerX < background.centerX\n  ) {\n    player.x = context.canvas.width / 2 + player.width / 2;\n  }\n\n  //this moves platforms\n\n  movement();\n\n  //max speed\n\n  if (player.xVelocity > maxSpeed || player.xVelocity < maxSpeed * -1) {\n    if (player.xVelocity > maxSpeed) {\n      player.xVelocity = maxSpeed;\n    } else {\n      player.xVelocity = maxSpeed * -1;\n    }\n  }\n\n  //friction when player stops moving only\n\n  if (!controller.left && !controller.right) {\n    player.xVelocity *= friction;\n  }\n\n  // don't allow player below ground level\n\n  if (player.y > context.canvas.height - 18 - player.height) {\n    landingActions();\n    player.y = context.canvas.height - 18 - player.height;\n  }\n\n  detectCollision(player);\n\n  draw(background);\n  draw(player);\n  draw(ground);\n  platforms.map(plat => {\n    draw(plat);\n  });\n  coins.map(coin => draw(coin));\n  draw(score);\n  draw(spikes[0]);\n\n  // update when browser will draw again\n\n  music.play();\n  window.requestAnimationFrame(loop);\n};\n\nwindow.addEventListener(\"keydown\", controller.keyListener);\nwindow.addEventListener(\"keyup\", controller.keyListener);\nwindow.onload = function() {\n  window.requestAnimationFrame(loop);\n};\n","import \"./src/engine/engine\";\nimport { mutePage } from \"./src/sounds/sounds\";\n\n//add event listeners\n\nconst muteBtn = document.getElementById(\"muteBtn\");\nmuteBtn.addEventListener(\"click\", mutePage);\n\nconsole.log(muteBtn);\n"]}